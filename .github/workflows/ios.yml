name: iOS

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

jobs:
  build:
    runs-on: macos-11.0

    env:
      DEVELOPER_DIR: /Applications/Xcode_12.3.app

    steps:
      - run: brew tap wix/brew
      - run: brew install applesimutils

      - name: Sun iOS simulator
        run: open -a /Applications/Xcode_12.3.app/Contents/Developer/Applications/Simulator.app --args -CurrentDeviceUDID $(applesimutils --byName "iPhone 12" --list | grep 'udid' | sed 's/.*:.*\"\(.*\)\",/\1/')

      - uses: docker-practice/actions-setup-docker@master
        with:
          docker_channel: stable
          docker_version: 19.03

      - name: Checkout backend repo
        uses: actions/checkout@v2
        with:
          repository: Shchepotin/nestjs-boilerplate
          path: backend

      - run: cd backend && cp env-example .env && cd ..
      - run: ls ~/Library/Containers/com.docker.docker/Data/vms/0

      - name: Cache Docker Images
        id: cache-backend-docker-images
        uses: actions/cache@v2
        with:
          path: ~/Library/Containers/com.docker.docker/Data/vms/0
          key: cache-backend-docker-images-${{ hashFiles('backend/docker-compose.yaml', 'backend/package-lock.json', 'backend/package.json', 'backend/.env') }}

      - name: Run backend
        run: cd backend && docker-compose up -d && cd ..
      - run: backend/wait-for-it.sh localhost:3000 -- echo 'Success run backend'
      - run: curl http://localhost:3000

      - name: Checkout
        uses: actions/checkout@v2
        with:
          path: app

      - name: Cache App Dependencies
        id: cache-node-modules-app
        uses: actions/cache@v2
        with:
          path: app/node_modules
          key: cache-node-modules-app-${{ hashFiles('app/yarn.lock') }}

      - name: Install Dependencies
        if: steps.cache-node-modules-app.outputs.cache-hit != 'true'
        run: cd app && yarn install

      - name: Update Pods
        run: gem update cocoapods xcodeproj

      - name: Cache Pods App
        id: cache-pods-app
        uses: actions/cache@v2
        with:
          path: app/ios/Pods
          key: cache-pods-app-${{ hashFiles('app/ios/Podfile.lock') }}

      - name: Install Dependencies
        if: steps.cache-pods-app.outputs.cache-hit != 'true'
        run: cd app/ios && pod install && cd ../..

      - run: cd app && yarn start &

      - name: Cache Build App
        id: cache-build-app
        uses: actions/cache@v2
        with:
          path: app/ios/build
          key: cache-build-app-${{ hashFiles('app/yarn.lock') }}

      - run: cd app && SIMULATOR_NAME="iPhone 12" yarn test:e2e-build-ios && cd ..
      # - run: cd app && SIMULATOR_NAME="iPhone 12" yarn test:e2e-run-ios && cd ..
